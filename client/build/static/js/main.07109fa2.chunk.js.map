{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/profileActions.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","components/common/PrivateRoute.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/common/Spinner.js","components/dashboard/ProfileActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/common/TextAreaFieldGroup.js","components/common/SelectListGroup.js","components/common/InputGroup.js","components/create-profile/CreateProfile.js","components/edit-profile/EditProfile.js","components/add-experience/AddExperience.js","components/add-experience/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileHeader.js","components/profile/ProfileCreds.js","components/profile/github_api/githubApi.js","components/profile/ProfileGithub.js","components/profile/ProfileAbout.js","components/profile/Profile.js","components/not-found/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","getCurrentProfile","setProfileLoading","get","then","res","data","catch","err","createProfile","profileData","history","post","push","response","clearProfile","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","profile","profiles","loading","combineReducers","auth","state","arguments","action","objectSpread","errors","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","Redirect","to","proptTypes","PropTypes","object","isRequired","connect","Navbar","e","preventDefault","this","_this$props$auth","authLinks","className","Link","role","href","onClick","onLogoutClick","bind","style","width","marginRight","src","avatar","alt","name","title","guestLinks","data-toggle","data-target","id","Footer","Date","getFullYear","Landing","content","setState","TextFieldGroup","placeholder","error","label","info","onChange","disabled","classnames","is-invalid","bg-secondary","defaultProps","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","defineProperty","target","onSubmit","newUser","email","password","password2","registerUser","nextProps","height","noValidate","common_TextFieldGroup","userData","withRouter","Login","loginUser","setItem","jwt_decode","Spinner","ProfileActions","Experience","deleteExperience","experience","map","exp","key","_id","company","dist_default","format","from","onDeleteClick","delete","concat","Education","deleteEducation","education","edu","school","degree","fieldOfStudy","Dashboard","deleteAccount","dashboardContent","_this$props$profile","common_Spinner","handle","dashboard_ProfileActions","dashboard_Experience","dashboard_Education","marginBottom","confirm","TextAreaFieldGroup","SelectListGroup","selectOptions","options","option","InputGroup","icon","CreateProfile","website","location","status","skills","githubUsername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","socialInputs","_this2","_this$state","common_InputGroup","minHeight","common_SelectListGroup","common_TextAreaFieldGroup","prevState","EditProfile","skillsCSV","join","social","AddExperience","expData","current","description","addExperience","onCheck","checked","htmlFor","AddEducation","eduData","addEducation","ProfileItems","_Component","inherits","createClass","slice","skill","index","Profiles","getProfiles","profileItems","ProfileItem","ProfileHeader","rel","ProfileCreds","_this$props","expItems","eduItems","api","clientId","clientSecret","count","sort","repos","getGithub","username","fetch","sorted","json","console","log","ProfileGithub","refs","myRef","repoItems","repo","html_url","stargazers_count","watchers_count","forks_count","ref","ProfileAbout","firstName","split","Profile","match","params","getProfileByHandle","profileContent","profile_ProfileHeader","profile_ProfileAbout","profile_ProfileCreds","profile_ProfileGithub","not_found_NotFound","NotFound","jwtToken","currentTime","now","App","es","BrowserRouter","layout_Navbar","exact","path","Switch","common_PrivateRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07109fa2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// Always attached the authorization header to a logged in user\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to all requests\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    // No token = Delete Auth Header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  // Dealing with Async data, Use Thunk middleware\r\n  axios\r\n    .post('/api/users/register', userData)\r\n    .then(res => history.push('/login'))\r\n    .catch(err =>\r\n      // Call dispatch Redux-thunk\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login User, Get  jwt Token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post('/api/users/login', userData)\r\n    .then(res => {\r\n      // Save data to local Storage\r\n      const { token } = res.data;\r\n      localStorage.setItem('jwtToken', token);\r\n      // Set token to Auth Header\r\n      setAuthToken(token);\r\n      // Decode Token using jwt_decode to get user data\r\n      const decoded = jwt_decode(token);\r\n      // dispatch to Set Current User function\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in User\r\nexport const setCurrentUser = decoded => {\r\n  // Dispatch to reducer\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n  // Once set, Catch in AUTH reducer\r\n};\r\n\r\n// Log user Out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove the jwtToken from localStorage\r\n  localStorage.removeItem('jwtToken');\r\n  // Remove the Auth header\r\n  setAuthToken(false);\r\n  // Set current user to empty object ={} that will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\r\nexport const PROFILE_NOT_FOUND = 'PROFILE_NOT_FOUND';\r\nexport const CLEAR_CURRENT_PROFILE = 'CLEAR_CURRENT_PROFILE';\r\n","import axios from 'axios';\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  GET_PROFILES\r\n} from './types';\r\n\r\n// Get the Current Users Profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// Get Profile by handle\r\nexport const getProfileByHandle = handle => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(`/api/profile/handle/${handle}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Create a Profile. use history for redirecting\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile', profileData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Profile Loading action\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Clear Profile\r\nexport const clearProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n\r\n// Add Experience On Success: Redirect, else call get Errors\r\nexport const addExperience = (expData, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile/experience', expData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// Add Education On Success: Redirect, else call get Errors\r\nexport const addEducation = (eduData, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile/education', eduData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// Get all Profiles\r\nexport const getProfiles = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile/all')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => dispatch => {\r\n  axios.delete(`/api/profile/experience/${id}`).then(res =>\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  );\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => dispatch => {\r\n  axios.delete(`/api/profile/education/${id}`).then(res =>\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  );\r\n};\r\n\r\n// Delete Account AND Profile\r\nexport const deleteAccount = () => dispatch => {\r\n  if (window.confirm('This is permanent, Are you sure ?')) {\r\n    axios\r\n      .delete('/api/profile')\r\n      .then(res =>\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: {}\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  }\r\n};\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from '../validation/is-empty';\r\nimport { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        // Return current state\r\n        ...state,\r\n        // If payload empty = no jwt token = unauthorized\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      // Payload will include errors object from the axios request\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport profileReducer from './profileReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.proptTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/authActions';\r\nimport { clearProfile } from '../../actions/profileActions';\r\n\r\nclass Navbar extends Component {\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    //  Logout the user and Clear the current profile\r\n    this.props.logoutUser();\r\n    this.props.clearProfile();\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <a\r\n            role=\"button\"\r\n            href=\"/\"\r\n            onClick={this.onLogoutClick.bind(this)}\r\n            className=\"nav-link\"\r\n          >\r\n            Logout\r\n          </a>\r\n        </li>\r\n\r\n        <li className=\"nav-item ml-3 mt-2\">\r\n          <img\r\n            className=\"rounded-circle\"\r\n            style={{ width: '25px', marginRight: '5px' }}\r\n            src={user.avatar}\r\n            alt={user.name}\r\n            title=\"If you have Gravatar Connected, your image will be displayed here\"\r\n          />\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            MERN\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/profiles\" className=\"nav-link\">\r\n                  Profiles\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            {isAuthenticated ? authLinks : guestLinks}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  clearProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, clearProfile }\r\n)(Navbar);\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n        Copyright &copy; {new Date().getFullYear()} MERN Stack\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Landing extends Component {\r\n  state = {\r\n    content: ''\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.setState({\r\n        content: (\r\n          <div>\r\n            <Link to=\"/dashboard\" className=\"btn btn-lg btn-info mr-2\">\r\n              Go To Dashboard\r\n            </Link>\r\n          </div>\r\n        )\r\n      });\r\n    } else {\r\n      this.setState({\r\n        content: (\r\n          <div>\r\n            <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">MERN Stack</h1>\r\n                <p className=\"lead\">\r\n                  Application Made using MongoDB + Express + React + Node\r\n                </p>\r\n                <hr />\r\n                {this.state.content}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n          'bg-secondary': disabled\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.string,\r\n  info: PropTypes.string,\r\n  label: PropTypes.string,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text',\r\n  value: ''\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// withRouter needed to be able to redirect in Actions\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/authActions';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Check to see if the user is logged in\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Redirect from the Register page\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Check if there are any errors in the REDUX state\r\n    // If true, combine with the component error state\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    // Pass in the history property for redirecting\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    // Pull errors out of the state\r\n    const { errors } = this.state;\r\n    return (\r\n      <div style={{ height: '100vh' }}>\r\n        <div className=\"register\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                <p className=\"lead text-center\">Create An Account !</p>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <TextFieldGroup\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextFieldGroup\r\n                    placeholder=\"Email Address\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                    info=\"You can use Gravatar on this Site\"\r\n                  />\r\n\r\n                  <TextFieldGroup\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                    error={errors.password}\r\n                  />\r\n\r\n                  <TextFieldGroup\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    value={this.state.password2}\r\n                    onChange={this.onChange}\r\n                    error={errors.password2}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-info btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Map react Component properties to prop-types\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/authActions';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Check to see if the user is logged in\r\n    if (this.props.auth.isAuthenticated) {\r\n      // Redirect from the Login page\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // If user already registered and is Authenticated\r\n    // Redirect to Dashboard\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    // On submit, call auth Action\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\" style={{ height: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your DevConnector account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React from 'react';\r\n\r\n// Spinner made with CSS\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-ripple\">\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileActions = () => {\r\n  return (\r\n    <div className=\"btn-group mb-4\" role=\"group\">\r\n      <Link className=\"btn btn-light\" to=\"/edit-profile\">\r\n        <i className=\"fas fa-user-circle text-info mr-1\" />\r\n        Edit Profile\r\n      </Link>\r\n\r\n      <Link className=\"btn btn-light\" to=\"/add-experience\">\r\n        <i className=\"fab fa-black-tie text-info mr-1\" />\r\n        Add Experience\r\n      </Link>\r\n\r\n      <Link className=\"btn btn-light\" to=\"/add-education\">\r\n        <i className=\"fas fa-graduation-cap text-info mr-1\" />\r\n        Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileActions;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { deleteExperience } from '../../actions/profileActions';\r\n\r\nclass Experience extends Component {\r\n  onDeleteClick(id) {\r\n    this.props.deleteExperience(id);\r\n  }\r\n  render() {\r\n    const experience = this.props.experience.map(exp => (\r\n      <tr key={exp._id}>\r\n        <td>{exp.company}</td>\r\n        <td>{exp.title}</td>\r\n        <td>\r\n          <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment> {' - '}\r\n          {exp.to === null ? (\r\n            ' Current'\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDeleteClick.bind(this, exp._id)}\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h4 className=\"mb-4\">Experience</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Company</th>\r\n              <th>Title</th>\r\n              <th>Years</th>\r\n              <th />\r\n            </tr>\r\n            {experience}\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExperience.propTypes = {\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteExperience }\r\n)(Experience);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { deleteEducation } from '../../actions/profileActions';\r\n\r\nclass Education extends Component {\r\n  onDeleteClick(id) {\r\n    this.props.deleteEducation(id);\r\n  }\r\n  render() {\r\n    const education = this.props.education.map(edu => (\r\n      <tr key={edu._id}>\r\n        <td>{edu.school}</td>\r\n        <td>{edu.degree}</td>\r\n        <td>{edu.fieldOfStudy}</td>\r\n        <td>\r\n          <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment> {' - '}\r\n          {edu.to === null ? (\r\n            ' Current'\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDeleteClick.bind(this, edu._id)}\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h4 className=\"mb-4\">Education</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>School</th>\r\n              <th>Degree</th>\r\n              <th>Field of Study</th>\r\n              <th>Years</th>\r\n              <th />\r\n            </tr>\r\n            {education}\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducation.propTypes = {\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEducation }\r\n)(Education);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profileActions';\r\nimport Spinner from '../common/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileActions from './ProfileActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  onDeleteClick = e => {\r\n    this.props.deleteAccount();\r\n  };\r\n\r\n  render() {\r\n    // Get user from the Auth State\r\n    const { user } = this.props.auth;\r\n    const { profile, loading } = this.props.profile;\r\n\r\n    let dashboardContent;\r\n\r\n    if (profile === null || loading) {\r\n      dashboardContent = <Spinner />;\r\n    } else {\r\n      // Check if the current user has a Profile\r\n      if (Object.keys(profile).length > 0) {\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">\r\n              Hello, dear sir and Or mam.{' '}\r\n              <Link to={`/profile/${profile.handle}`}>{user.name}</Link>\r\n            </p>\r\n            <ProfileActions />\r\n\r\n            {/* Pass profile experience object */}\r\n            <Experience experience={profile.experience} />\r\n            <Education education={profile.education} />\r\n\r\n            <div style={{ marginBottom: '60px' }}>\r\n              <button className=\"btn btn-danger\" onClick={this.onDeleteClick}>\r\n                Delete Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // Suggest to create a profile\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">New Profile Time!</p>\r\n            <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\r\n              Create Profile\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div style={{ height: '100vh' }} className=\"dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4\">Dashbordio</h1>\r\n              {dashboardContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, deleteAccount }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.string,\r\n  info: PropTypes.string\r\n};\r\n\r\nTextAreaFieldGroup.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\r\n  const selectOptions = options.map(option => (\r\n    <option key={option.label} value={option.value}>\r\n      {option.label}\r\n    </option>\r\n  ));\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n      >\r\n        {selectOptions}\r\n      </select>\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  info: PropTypes.string,\r\n  options: PropTypes.array.isRequired\r\n};\r\n\r\nSelectListGroup.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default SelectListGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputGroup = ({\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  onChange,\r\n  icon\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon} />\r\n        </span>\r\n      </div>\r\n\r\n      <input\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  value: '',\r\n  type: 'text'\r\n};\r\n\r\nexport default InputGroup;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport { createProfile } from '../../actions/profileActions';\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: '',\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubUsername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubUsername: this.state.githubUsername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter url\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook url\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin profile\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Youtube channel\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram account\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for select input group\r\n    const options = [\r\n      { label: '* Select an Option', value: 'Other' },\r\n      { label: 'Developer', value: 'Developer' },\r\n      { label: 'Junior Developer', value: 'Junior Developer' },\r\n      { label: 'Senior Developer', value: 'Senior Developer' },\r\n      { label: 'Manager', value: 'Manager' },\r\n      { label: 'Student', value: 'Student' },\r\n      { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\r\n      { label: 'Intern', value: 'Intern' },\r\n      { label: 'Other', value: 'Other' }\r\n    ];\r\n    return (\r\n      <div className=\"create-profile\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Create your Profile</h1>\r\n              <p className=\"lead text-center\">More About You</p>\r\n              <small className=\"d-block pb-3 text-center \">* = required</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"Make a custom Handle for your Personal URL\"\r\n                />\r\n\r\n                <SelectListGroup\r\n                  placeholder=\"* Current professional status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  options={options}\r\n                  onChange={this.onChange}\r\n                  error={errors.status}\r\n                  info=\"Your career\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Current or Previous worked at Company\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Personal Website\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"Based in Austin, TX etc.\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"*Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Separate skills with a comma: 'HTML, CSS, JavaScript\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubUsername\"\r\n                  value={this.state.githubUsername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubUsername}\r\n                  info=\"Share your Repositories\"\r\n                />\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Personal Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Little bit about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Networks\r\n                  </button>\r\n                  <span className=\"text-muted\">Not required</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nCreateProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile }\r\n)(withRouter(CreateProfile));\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: '',\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubUsername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n\r\n    if (nextProps.profile.profile) {\r\n      const profile = nextProps.profile.profile;\r\n\r\n      // Change skills array into a comma separated Value\r\n      const skillsCSV = profile.skills.join(',');\r\n\r\n      // If a specific profile field is empty, make it an empty string\r\n      profile.company = !isEmpty(profile.company) ? profile.company : '';\r\n      profile.website = !isEmpty(profile.website) ? profile.website : '';\r\n      profile.location = !isEmpty(profile.location) ? profile.location : '';\r\n      profile.githubUsername = !isEmpty(profile.githubUsername)\r\n        ? profile.githubUsername\r\n        : '';\r\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\r\n\r\n      // Do the same with Social Links, but it has to be an Empty Object\r\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\r\n\r\n      profile.twitter = !isEmpty(profile.social.twitter)\r\n        ? profile.social.twitter\r\n        : '';\r\n      profile.facebook = !isEmpty(profile.social.facebook)\r\n        ? profile.social.facebook\r\n        : '';\r\n      profile.linkedin = !isEmpty(profile.social.linkedin)\r\n        ? profile.social.linkedin\r\n        : '';\r\n      profile.youtube = !isEmpty(profile.social.youtube)\r\n        ? profile.social.youtube\r\n        : '';\r\n      profile.instagram = !isEmpty(profile.social.instagram)\r\n        ? profile.social.instagram\r\n        : '';\r\n\r\n      // Set component Field State to pass Current Profile Values\r\n      this.setState({\r\n        handle: profile.handle,\r\n        company: profile.company,\r\n        website: profile.website,\r\n        location: profile.location,\r\n        status: profile.status,\r\n        skills: skillsCSV,\r\n        githubUsername: profile.githubUsername,\r\n        bio: profile.bio,\r\n        twitter: profile.twitter,\r\n        facebook: profile.facebook,\r\n        linkedin: profile.linkedin,\r\n        youtube: profile.youtube,\r\n        instagram: profile.instagram\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubUsername: this.state.githubUsername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter url\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook url\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin profile\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Youtube channel\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram account\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for select input group\r\n    const options = [\r\n      { label: '* Select an Option', value: 'Other' },\r\n      { label: 'Developer', value: 'Developer' },\r\n      { label: 'Junior Developer', value: 'Junior Developer' },\r\n      { label: 'Senior Developer', value: 'Senior Developer' },\r\n      { label: 'Manager', value: 'Manager' },\r\n      { label: 'Student', value: 'Student' },\r\n      { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\r\n      { label: 'Intern', value: 'Intern' },\r\n      { label: 'Other', value: 'Other' }\r\n    ];\r\n    return (\r\n      <div className=\"create-profile\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Edit your Profile</h1>\r\n              <small className=\"d-block pb-3 text-center text-danger\">\r\n                *required\r\n              </small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"Make a custom Handle for your Personal URL\"\r\n                />\r\n\r\n                <SelectListGroup\r\n                  placeholder=\"* Current professional status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  options={options}\r\n                  onChange={this.onChange}\r\n                  error={errors.status}\r\n                  info=\"Your career\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Current or Previous worked at Company\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Personal Website\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"Based in Austin, TX etc.\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"*Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Separate skills with a comma: 'HTML, CSS, JavaScript\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubUsername\"\r\n                  value={this.state.githubUsername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubUsername}\r\n                  info=\"Share your Repositories\"\r\n                />\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Personal Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Little bit about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Add Social Networks\r\n                  </button>\r\n                  <span className=\"text-muted\">{'  '}Not required</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { addExperience } from '../../actions/profileActions';\r\n\r\nclass AddExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: '',\r\n      title: '',\r\n      location: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: '',\r\n      disabled: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const expData = {\r\n      company: this.state.company,\r\n      title: this.state.title,\r\n      location: this.state.location,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.addExperience(expData, this.props.history);\r\n  };\r\n\r\n  onCheck = e => {\r\n    // Set to opposites in order to apply bootstrap class and make it toggle\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-experience\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\"> Experience</h1>\r\n              <p className=\"lead text-center\">\r\n                Add work experience and internships\r\n              </p>\r\n              <small className=\"d-block pb-3 text-danger text-center\">\r\n                *required\r\n              </small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Position Title\"\r\n                  name=\"title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChange}\r\n                  error={errors.title}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Location Based In\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                />\r\n                <h6>* From Date</h6>\r\n                <TextFieldGroup\r\n                  type=\"date\"\r\n                  name=\"from\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                  error={errors.from}\r\n                />\r\n\r\n                <h6>To Date</h6>\r\n                <TextFieldGroup\r\n                  type=\"date\"\r\n                  name=\"to\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  error={errors.to}\r\n                  disabled={this.state.disabled ? 'disabled' : ''}\r\n                />\r\n\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label htmlFor=\"current\" className=\"form-check-label\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Work Description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  error={errors.description}\r\n                  info=\"More about the position\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\n// Bring Global state from the Reducer\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addExperience }\r\n)(withRouter(AddExperience));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { addEducation } from '../../actions/profileActions';\r\n\r\nclass AddEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      school: '',\r\n      degree: '',\r\n      fieldOfStudy: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: '',\r\n      disabled: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const eduData = {\r\n      school: this.state.school,\r\n      degree: this.state.degree,\r\n      fieldOfStudy: this.state.fieldOfStudy,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.addEducation(eduData, this.props.history);\r\n  };\r\n\r\n  onCheck = e => {\r\n    // Set to opposites in order to apply bootstrap class and make it toggle\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-education\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\"> Education</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any School, Course or Training\r\n              </p>\r\n              <small className=\"d-block pb-3 text-danger text-center\">\r\n                *required\r\n              </small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* School\"\r\n                  name=\"school\"\r\n                  value={this.state.school}\r\n                  onChange={this.onChange}\r\n                  error={errors.school}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Degree or Certification\"\r\n                  name=\"degree\"\r\n                  value={this.state.degree}\r\n                  onChange={this.onChange}\r\n                  error={errors.degree}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Field of Study\"\r\n                  name=\"fieldOfStudy\"\r\n                  value={this.state.fieldOfStudy}\r\n                  onChange={this.onChange}\r\n                  error={errors.fieldOfStudy}\r\n                />\r\n                <h6>* From Date</h6>\r\n                <TextFieldGroup\r\n                  type=\"date\"\r\n                  name=\"from\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                  error={errors.from}\r\n                />\r\n\r\n                <h6>To Date</h6>\r\n                <TextFieldGroup\r\n                  type=\"date\"\r\n                  name=\"to\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  error={errors.to}\r\n                  disabled={this.state.disabled ? 'disabled text-muted' : ''}\r\n                />\r\n\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label htmlFor=\"current\" className=\"form-check-label\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Program Description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  error={errors.description}\r\n                  info=\"More about the activities\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\n// Bring Global state from the Reducer\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addEducation }\r\n)(withRouter(AddEducation));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nexport class ProfileItems extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <div className=\"card card-body bg-light mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <img\r\n              src={profile.user.avatar}\r\n              alt=\"avatar\"\r\n              className=\"rounded-circle\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-4 col-8\">\r\n            <h3>{profile.user.name}</h3>\r\n            <p>\r\n              {profile.status}{' '}\r\n              {isEmpty(profile.company) ? null : (\r\n                <span>at {profile.company}</span>\r\n              )}\r\n            </p>\r\n            <p>\r\n              {isEmpty(profile.location) ? null : (\r\n                <span>{profile.location}</span>\r\n              )}\r\n            </p>\r\n            <Link to={`/profile/${profile.handle}`} className=\"btn btn-info\">\r\n              View Profile\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-4 d-none d-md-block\">\r\n            <h4>Acquired Skills</h4>\r\n            <ul className=\"list-group\">\r\n              {profile.skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className=\"list-group-item\">\r\n                  <i className=\"fa fa-check pr-1\" />\r\n                  {skill}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileItems.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItems;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../common/Spinner';\r\nimport { getProfiles } from '../../actions/profileActions';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nclass Profiles extends Component {\r\n  componentDidMount() {\r\n    this.props.getProfiles();\r\n  }\r\n\r\n  render() {\r\n    const { profiles, loading } = this.props.profile;\r\n    let profileItems;\r\n    if (profiles === null || loading) {\r\n      profileItems = <Spinner />;\r\n    } else {\r\n      if (profiles.length > 0) {\r\n        profileItems = profiles.map(profile => (\r\n          <ProfileItem key={profile._id} profile={profile} />\r\n        ));\r\n      } else {\r\n        profileItems = <h4>No Profiles Found</h4>;\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"profiles\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Profiles</h1>\r\n              <p className=\"lead text-center\">Browse all these Profiles !</p>\r\n              {profileItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from '../../validation/is-empty';\r\nclass ProfileHeader extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card-card-body bg-info text-white mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-4 col-md-3 m-auto\">\r\n                <img\r\n                  src={profile.user.avatar}\r\n                  alt=\"\"\r\n                  className=\"rounded-circle\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h1 className=\"display-4 text-center\">{profile.name}</h1>\r\n              <p className=\"lead text-center\">\r\n                {profile.status}{' '}\r\n                {isEmpty(profile.company) ? null : (\r\n                  <span> at {profile.company}</span>\r\n                )}\r\n              </p>\r\n              {isEmpty(profile.location) ? null : (\r\n                <p className=\"text-center text-light\">\r\n                  Based in {profile.location}\r\n                </p>\r\n              )}\r\n\r\n              {isEmpty(profile.website) ? null : (\r\n                <Link\r\n                  rel=\"noopener noreferrer\"\r\n                  to={`https://` + profile.website}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fas fa-globe fa-2x\" />\r\n                </Link>\r\n              )}\r\n\r\n              {isEmpty(profile.social && profile.social.twitter) ? null : (\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  href={`https://` + profile.social.twitter}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fab fa-twitter fa-2x\" />\r\n                </a>\r\n              )}\r\n\r\n              {isEmpty(profile.social && profile.social.facebook) ? null : (\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  href={`https://` + profile.social.facebook}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fab fa-facebook fa-2x\" />\r\n                </a>\r\n              )}\r\n              {isEmpty(profile.social && profile.social.linkedin) ? null : (\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  href={`https://` + profile.social.linkedin}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fab fa-linkedin fa-2x\" />\r\n                </a>\r\n              )}\r\n              {isEmpty(profile.social && profile.social.youtube) ? null : (\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  href={`https://` + profile.social.youtube}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fab fa-youtube fa-2x\" />\r\n                </a>\r\n              )}\r\n              {isEmpty(profile.social && profile.social.instagram) ? null : (\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  href={`https://` + profile.social.instagram}\r\n                  target=\"_blank\"\r\n                  className=\"text-white p-2\"\r\n                >\r\n                  <i className=\"fab fa-instagram fa-2x\" />\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass ProfileCreds extends Component {\r\n  render() {\r\n    const { experience, education } = this.props;\r\n\r\n    // Map through experience and Education\r\n    const expItems = experience.map(exp => (\r\n      <li className=\"list-group-item\" key={exp._id}>\r\n        <h4>{exp.company}</h4>\r\n        <p>\r\n          <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment>\r\n          {' - '}\r\n          {exp.to === null ? (\r\n            ' Present'\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n          )}\r\n        </p>\r\n        <p>\r\n          <strong>Position: {exp.title}</strong>\r\n        </p>\r\n        <p>\r\n          {exp.location === '' ? null : (\r\n            <strong>Based in: {exp.location}</strong>\r\n          )}\r\n        </p>\r\n        <p>\r\n          {exp.description === '' ? null : (\r\n            <strong>Details: {exp.description}</strong>\r\n          )}\r\n        </p>\r\n      </li>\r\n    ));\r\n\r\n    const eduItems = education.map(edu => (\r\n      <li className=\"list-group-item\" key={edu._id}>\r\n        <h4>{edu.school}</h4>\r\n        <p>\r\n          <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment>\r\n          {' - '}\r\n          {edu.to === null ? (\r\n            ' Present'\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\r\n          )}\r\n        </p>\r\n        <p>\r\n          {edu.degree === '' ? null : <strong>Degree: {edu.degree}</strong>}\r\n        </p>\r\n        <p>\r\n          {edu.fieldOfStudy === '' ? null : (\r\n            <strong>Field Of Study: {edu.fieldOfStudy}</strong>\r\n          )}\r\n        </p>\r\n        <p>\r\n          {edu.description === '' ? null : (\r\n            <strong>Details: {edu.description}</strong>\r\n          )}\r\n        </p>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-center text-info\">Experience</h3>\r\n          {expItems.length > 0 ? (\r\n            <div className=\"list-group\">{expItems}</div>\r\n          ) : (\r\n            <p className=\"text-center\">Experience not provided</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-center text-info\">Education</h3>\r\n          {eduItems.length > 0 ? (\r\n            <div className=\"list-group\">{eduItems}</div>\r\n          ) : (\r\n            <p className=\"text-center\">Education not provided</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileCreds;\r\n","const api = {\r\n  clientId: '8c2720377d3c4b2dfc83',\r\n  clientSecret: '57bad6139ff1fa1ded1b88158743e1b9924ddcb5',\r\n  count: 5,\r\n  sort: 'created: asc',\r\n  repos: []\r\n};\r\n\r\nexport const getGithub = username =>\r\n  fetch(\r\n    `https://api.github.com/users/${username}/repos?per_page=${\r\n      api.count\r\n    }&sort=${api.sorted}&client_id=${api.clientId}&client_secret=${\r\n      api.clientSecret\r\n    }`\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n    .catch(err => console.log(err));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getGithub } from './github_api/githubApi';\r\n\r\nclass ProfileGithub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repos: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { username } = this.props;\r\n    const data = await getGithub(username);\r\n    if (this.refs.myRef) {\r\n      this.setState({\r\n        repos: data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { repos } = this.state;\r\n\r\n    const repoItems = repos.map(repo => (\r\n      <div className=\"card card-body mb-2\" key={repo.id}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h4>\r\n              <a\r\n                href={repo.html_url}\r\n                className=\"text-info\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {repo.name}\r\n              </a>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <span className=\"badge badge-info mr-1\">\r\n              Stars: {repo.stargazers_count}\r\n            </span>\r\n            <span className=\"badge badge-secondary mr-1\">\r\n              Watchers: {repo.watchers_count}\r\n            </span>\r\n            <span className=\"badge badge-success\">\r\n              Forks: {repo.forks_count}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div ref=\"myRef\">\r\n        <hr />\r\n        <h3 className=\"mb-4\">Latest Github Repositories</h3>\r\n        {repoItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileGithub;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nclass ProfileAbout extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n\r\n    // Get First Name\r\n    const firstName = profile.user.name.trim().split(' ')[0];\r\n    // Map through skill array\r\n    const skills = profile.skills.map((skill, index) => (\r\n      <div className=\"p-3\" key={index}>\r\n        <i className=\"fa fa-check\" />\r\n        {skill}\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n            <h3>{firstName}'s bio</h3>\r\n            <p className=\"lead\">\r\n              {isEmpty(profile.bio) ? (\r\n                <span>No Bio created</span>\r\n              ) : (\r\n                <span>{profile.bio}</span>\r\n              )}\r\n            </p>\r\n            <hr />\r\n            <h3 className=\"text-center text-info\">Acquired Skills</h3>\r\n            <div className=\"row\">\r\n              <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\r\n                {skills}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProfileByHandle } from '../../actions/profileActions';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport ProfileCreds from './ProfileCreds';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport Spinner from '../common/Spinner';\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.handle) {\r\n      this.props.getProfileByHandle(this.props.match.params.handle);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.profile.profile === null && this.props.profile.loading) {\r\n      this.props.history.push('/not-found');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { profile, loading } = this.props.profile;\r\n    let profileContent;\r\n    if (profile === null || loading) {\r\n      profileContent = <Spinner />;\r\n    } else {\r\n      profileContent = (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light mb-3 float-left\">\r\n                Back to profiles\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\" />\r\n          </div>\r\n          <ProfileHeader profile={profile} />\r\n          <ProfileAbout profile={profile} />\r\n          <ProfileCreds\r\n            education={profile.education}\r\n            experience={profile.experience}\r\n          />\r\n          {profile.githubUsername ? (\r\n            <ProfileGithub username={profile.githubUsername} />\r\n          ) : null}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">{profileContent}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  getProfileByHandle: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByHandle }\r\n)(Profile);\r\n","import React from 'react';\r\n\r\nexport default NotFound => {\r\n  return (\r\n    <div style={{ minHeight: '100vh' }}>\r\n      <h1 className=\"display-4\">Page not Found</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { clearProfile } from './actions/profileActions';\nimport store from './store';\n\n// Authenticated Only Routes\nimport PrivateRoute from './components/common/PrivateRoute';\n\n//  Components\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/create-profile/CreateProfile';\nimport EditProfile from './components/edit-profile/EditProfile';\nimport AddExperience from './components/add-experience/AddExperience';\nimport AddEducation from './components/add-experience/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport NotFound from './components/not-found/NotFound';\n\nimport './App.css';\n\n// Check for user token\nif (localStorage.jwtToken) {\n  // Set auth token header\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Call the set current user action + isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for token expiration\n  const currentTime = Date.now() / 4000;\n  if (decoded.exp < currentTime) {\n    // Logout the user\n    store.dispatch(logoutUser());\n    // Clear the current Profile\n    store.dispatch(clearProfile());\n\n    // Redirect to Login\n    window.location.href = '/login';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container \">\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/profiles\" component={Profiles} />\n              <Route path=\"/profile/:handle\" component={Profile} />\n              <Switch>\n                <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n              </Switch>\n\n              <Switch>\n                <PrivateRoute\n                  path=\"/create-profile\"\n                  component={CreateProfile}\n                />\n              </Switch>\n\n              <Switch>\n                <PrivateRoute path=\"/edit-profile\" component={EditProfile} />\n              </Switch>\n              <Switch>\n                <PrivateRoute\n                  path=\"/add-experience\"\n                  component={AddExperience}\n                />\n              </Switch>\n              <Switch>\n                <PrivateRoute path=\"/add-education\" component={AddEducation} />\n              </Switch>\n              <Switch>\n                <Route path=\"/not-found\" component={NotFound} />\n              </Switch>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}